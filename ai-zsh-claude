#!/bin/bash

# Colors for output
GREEN='\033[0;32m'
BLUE='\033[0;34m'
YELLOW='\033[1;33m'
RED='\033[0;31m'
NC='\033[0m' # No Color

echo -e "${BLUE}Zsh and Plugins Installation Script${NC}"
echo -e "${YELLOW}This script will install Zsh, Powerlevel10k theme, and popular plugins across different Linux distributions${NC}"
echo "----------------------------------------------"

# Detect the Linux distribution
if [ -f /etc/os-release ]; then
    . /etc/os-release
    DISTRO=$ID
elif type lsb_release >/dev/null 2>&1; then
    DISTRO=$(lsb_release -si | tr '[:upper:]' '[:lower:]')
else
    DISTRO=$(uname -s)
fi

echo -e "${GREEN}Detected distribution: ${YELLOW}$DISTRO${NC}"

# Install Zsh based on the distribution
install_zsh() {
    echo -e "${BLUE}Installing Zsh...${NC}"
    case $DISTRO in
        ubuntu|debian|linuxmint|pop)
            sudo apt update && sudo apt install -y zsh
            ;;
        fedora)
            sudo dnf install -y zsh
            ;;
        centos|rhel|almalinux|rocky)
            sudo yum install -y zsh
            ;;
        arch|manjaro)
            sudo pacman -S --noconfirm zsh
            ;;
        opensuse*)
            sudo zypper install -y zsh
            ;;
        alpine)
            sudo apk add zsh
            ;;
        *)
            echo -e "${RED}Unsupported distribution. Please install Zsh manually.${NC}"
            return 1
            ;;
    esac

    if [ $? -eq 0 ]; then
        echo -e "${GREEN}Zsh installed successfully!${NC}"
        return 0
    else
        echo -e "${RED}Failed to install Zsh.${NC}"
        return 1
    fi
}

# Install Oh-My-Zsh and plugins
install_oh_my_zsh_and_plugins() {
    # Check if Oh-My-Zsh is already installed
    if [ -d "$HOME/.oh-my-zsh" ]; then
        echo -e "${YELLOW}Oh-My-Zsh is already installed.${NC}"
    else
        echo -e "${BLUE}Installing Oh-My-Zsh...${NC}"
        sh -c "$(curl -fsSL https://raw.githubusercontent.com/ohmyzsh/ohmyzsh/master/tools/install.sh)" "" --unattended
        if [ $? -eq 0 ]; then
            echo -e "${GREEN}Oh-My-Zsh installed successfully!${NC}"
        else
            echo -e "${RED}Failed to install Oh-My-Zsh.${NC}"
            return 1
        fi
    fi

    # Install Powerlevel10k theme
    echo -e "${BLUE}Installing Powerlevel10k theme...${NC}"
    if [ -d "${ZSH_CUSTOM:-$HOME/.oh-my-zsh/custom}/themes/powerlevel10k" ]; then
        echo -e "${YELLOW}Powerlevel10k theme already installed.${NC}"
    else
        git clone --depth=1 https://github.com/romkatv/powerlevel10k.git ${ZSH_CUSTOM:-$HOME/.oh-my-zsh/custom}/themes/powerlevel10k
    fi

    # Install zsh-autosuggestions
    echo -e "${BLUE}Installing zsh-autosuggestions...${NC}"
    if [ -d "${ZSH_CUSTOM:-$HOME/.oh-my-zsh/custom}/plugins/zsh-autosuggestions" ]; then
        echo -e "${YELLOW}zsh-autosuggestions already installed.${NC}"
    else
        git clone https://github.com/zsh-users/zsh-autosuggestions ${ZSH_CUSTOM:-$HOME/.oh-my-zsh/custom}/plugins/zsh-autosuggestions
    fi

    # Install zsh-syntax-highlighting
    echo -e "${BLUE}Installing zsh-syntax-highlighting...${NC}"
    if [ -d "${ZSH_CUSTOM:-$HOME/.oh-my-zsh/custom}/plugins/zsh-syntax-highlighting" ]; then
        echo -e "${YELLOW}zsh-syntax-highlighting already installed.${NC}"
    else
        git clone https://github.com/zsh-users/zsh-syntax-highlighting.git ${ZSH_CUSTOM:-$HOME/.oh-my-zsh/custom}/plugins/zsh-syntax-highlighting
    fi

    # Update .zshrc with plugins and theme
    echo -e "${BLUE}Updating .zshrc with plugins and theme...${NC}"
    # Create backup of existing .zshrc
    if [ -f "$HOME/.zshrc" ]; then
        cp "$HOME/.zshrc" "$HOME/.zshrc.backup.$(date +%s)"
        echo -e "${GREEN}Created backup of .zshrc${NC}"
    fi

    # Update plugins in .zshrc
    if grep -q "^plugins=" "$HOME/.zshrc"; then
        sed -i 's/^plugins=(.*)/plugins=(git zsh-autosuggestions zsh-syntax-highlighting history-substring-search colored-man-pages)/' "$HOME/.zshrc"
    else
        echo 'plugins=(git zsh-autosuggestions zsh-syntax-highlighting history-substring-search colored-man-pages)' >> "$HOME/.zshrc"
    fi

    # Set Powerlevel10k theme
    if grep -q "^ZSH_THEME=" "$HOME/.zshrc"; then
        sed -i 's/^ZSH_THEME=".*"/ZSH_THEME="powerlevel10k\/powerlevel10k"/' "$HOME/.zshrc"
    else
        echo 'ZSH_THEME="powerlevel10k/powerlevel10k"' >> "$HOME/.zshrc"
    fi

    # Add Powerlevel10k configuration initialization
    if ! grep -q "p10k.zsh" "$HOME/.zshrc"; then
        echo '# To customize prompt, run `p10k configure` or edit ~/.p10k.zsh.' >> "$HOME/.zshrc"
        echo '[[ ! -f ~/.p10k.zsh ]] || source ~/.p10k.zsh' >> "$HOME/.zshrc"
    fi

    echo -e "${GREEN}Plugins and theme configured in .zshrc!${NC}"
}

# Set Zsh as default shell
set_zsh_default() {
    echo -e "${BLUE}Setting Zsh as default shell...${NC}"
    # Check if zsh is in /etc/shells
    if ! grep -q "$(which zsh)" /etc/shells; then
        echo "$(which zsh)" | sudo tee -a /etc/shells
    fi
    
    chsh -s "$(which zsh)"
    
    if [ $? -eq 0 ]; then
        echo -e "${GREEN}Zsh set as default shell. You need to log out and log back in for the change to take effect.${NC}"
    else
        echo -e "${RED}Failed to set Zsh as default shell.${NC}"
    fi
}

# Install git if not already installed
check_and_install_git() {
    if ! command -v git &> /dev/null; then
        echo -e "${BLUE}Git not found. Installing git...${NC}"
        case $DISTRO in
            ubuntu|debian|linuxmint|pop)
                sudo apt install -y git
                ;;
            fedora)
                sudo dnf install -y git
                ;;
            centos|rhel|almalinux|rocky)
                sudo yum install -y git
                ;;
            arch|manjaro)
                sudo pacman -S --noconfirm git
                ;;
            opensuse*)
                sudo zypper install -y git
                ;;
            alpine)
                sudo apk add git
                ;;
            *)
                echo -e "${RED}Unsupported distribution. Please install git manually.${NC}"
                return 1
                ;;
        esac
    fi
}

# Install recommended fonts for Powerlevel10k
install_fonts() {
    echo -e "${BLUE}Installing recommended fonts for Powerlevel10k...${NC}"
    
    # Create a temporary directory for font downloads
    FONT_DIR=$(mktemp -d)
    cd "$FONT_DIR" || return 1
    
    # Download and install Meslo Nerd Font
    echo -e "${YELLOW}Downloading Meslo Nerd Font...${NC}"
    mkdir -p "$HOME/.local/share/fonts"
    
    # Download fonts
    curl -fLo "MesloLGS NF Regular.ttf" \
      "https://github.com/romkatv/powerlevel10k-media/raw/master/MesloLGS%20NF%20Regular.ttf"
    curl -fLo "MesloLGS NF Bold.ttf" \
      "https://github.com/romkatv/powerlevel10k-media/raw/master/MesloLGS%20NF%20Bold.ttf"
    curl -fLo "MesloLGS NF Italic.ttf" \
      "https://github.com/romkatv/powerlevel10k-media/raw/master/MesloLGS%20NF%20Italic.ttf"
    curl -fLo "MesloLGS NF Bold Italic.ttf" \
      "https://github.com/romkatv/powerlevel10k-media/raw/master/MesloLGS%20NF%20Bold%20Italic.ttf"
    
    # Copy fonts to font directory
    cp "MesloLGS NF Regular.ttf" "$HOME/.local/share/fonts/"
    cp "MesloLGS NF Bold.ttf" "$HOME/.local/share/fonts/"
    cp "MesloLGS NF Italic.ttf" "$HOME/.local/share/fonts/"
    cp "MesloLGS NF Bold Italic.ttf" "$HOME/.local/share/fonts/"
    
    # Update font cache
    if command -v fc-cache &> /dev/null; then
        echo -e "${YELLOW}Updating font cache...${NC}"
        fc-cache -f "$HOME/.local/share/fonts"
    fi
    
    # Clean up
    cd "$OLDPWD" || return 1
    rm -rf "$FONT_DIR"
    
    echo -e "${GREEN}Fonts installed! You may need to configure your terminal to use MesloLGS NF for best results.${NC}"
}

# Main installation process
main() {
    # Check for git
    check_and_install_git
    
    # Install Zsh
    install_zsh
    if [ $? -ne 0 ]; then
        echo -e "${RED}Failed to install Zsh. Exiting.${NC}"
        exit 1
    fi
    
    # Install Oh-My-Zsh and plugins
    install_oh_my_zsh_and_plugins
    
    # Install fonts for Powerlevel10k
    install_fonts
    
    # Set Zsh as default shell
    set_zsh_default
    
    echo ""
    echo -e "${GREEN}====================================================${NC}"
    echo -e "${GREEN}Installation complete!${NC}"
    echo -e "${YELLOW}To apply changes immediately, run: source ~/.zshrc${NC}"
    echo -e "${YELLOW}For full effect, please log out and log back in.${NC}"
    echo -e "${YELLOW}When you first start zsh, the Powerlevel10k configuration wizard will start.${NC}"
    echo -e "${YELLOW}Follow the prompts to customize your prompt appearance.${NC}"
    echo -e "${GREEN}====================================================${NC}"
}

# Run the main function
main
